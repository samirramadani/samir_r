-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- Quartus II generated Memory Initialization File (.mif)


depth = 256;
width = 28;
address_radix = hex;
data_radix = bin;
content

begin    --0123456789012345678901234567
[0..FF]:     0100000000000000000000000000;
    --NOP                                 
    00:      0000000000000000000000010000;  
    --FETCH
 10:      0001000000000000000000010001;  
    11:      1000001000000000000000010010;  
    12:      0001000000000000100111111111;  
 --LOAD X
    20:      1000100000000000000000100001;  
    21:      0000001000000000000000100010; 
    22:      0000000000100000000000010000;  
 --STORE X
    30:      1000100000000000000000110001;  
    31:      0000000100000000000000110010;  
    32:      0000000000000000010000010000;  
 --MOVE
    40:      0000000000000000001000010000; 
--ADD
    50:      0000000010000000000000010000;  
 --AND
    60:      0000000001000000000000010000;  
 --TESTNZ
    70:      0000000000000010000000010000;  
    71:      0000000000000001000000010000;  
 --JUMP X
    80:      0000001000000000000010000001;  
    81:      0010000000000000000000010000;  
 --JUMPZ X
    90:      1000000000000000000010010001;  
    91:      0000001000000000000010010010;  
    92:      0010000000000000000000010000;  
 --LOADSP X
    C0:      1000000000010000000000010000; 
--PUSH
    D0:      0000000000001000000011010001;  
    D1:      0000010000000000000011010010;  
    D2:      0000000100000000000011010011;  
    D3:      0000000000000000010000010000;  
 --POP
    E0:      0000010000000000000011100001;  
    E1:      0000000000000100000011100010;  
    E2:      0000001000000000000011100011;  
    E3:      0000000000100000000000010000;  
 --HALT
    F0:      0100000000000000000000010000; 
end;


