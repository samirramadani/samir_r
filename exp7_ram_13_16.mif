-- ECE 495 Exp. 7
-- RAM mif file
-- Dr. Hou
-- Fall 2018
--
depth = 256;
width = 8;
address_radix = hex;
data_radix = hex;
content
  begin
    [0..FF]: 00;
--
-- Test 13 -----------------------------------------------------
--
-- M[F0]+M[F1]+M[F2]+M[F3]+M[F4]
--
-- 00: load FF     A = 00
-- 02: load F0     A = 01
-- 04: move        A = 01
-- 05: load F1     A = 03
-- 07: add         A = 04
-- 08: move        A = 04
-- 09: load F2     A = 05
-- 0B: add         A = 09
-- 0C: move        A = 09
-- 0D: load F3     A = 07
-- 0F: add         A = 10
-- 10: move        A = 10
-- 11: load F4     A = 09
-- 13: add         A = 19
-- 14: halt
-- 
--  00: 20 FF 20 F0 40 20 F1 50 40 20 F2 50 40 20 F3 50 40 20 F4 50 F0; 
--  F0: 01 03 05 07 09;
--  FF: 00;
--
-- Test 14 -----------------------------------------------------
-- 
-- 00: loadi 02    A = 02
-- 02: addi 04     A = 06
-- 04: store F1    A = 06
-- 06: loadi 04    A = 04
-- 08: subi 02     A = 02
-- 0A: store F2    A = 02
-- 0C: load F1     A = 06
-- 0E: move        A = 06
-- 10: load F2     A = 02
-- 12: sub         A = FC
-- 14: halt
--
--  00: 10 02 A0 04 30 F1 10 04 b0 02 30 F2 20 F1 40 20 F2 60 F0;
--  F1: 00 00;
--
-- Test 15 -----------------------------------------------------
--
-- start counting from F5, stop when at 00
--
-- 00: load F0      A = 01
-- 02: move         A = 01
-- 03: load FF      A = F5
-- 05: add	        A = F5 F6 F7 F8 F9 FA FB FC FD FE FF 00
-- 06: testnz       A = F5 F6 F7 F8 F9 FA FB FC FD FE FF 00
-- 07: jumpz 05     A = F5 F6 F7 F8 F9 FA FB FC FD FE FF 00
-- 09: halt
--
--  00: 20 F0 40 20 FF;
--  05: 50 71 90 05 F0;
--  F0: 01;
--  FF: F5;
--
-- Test 16 -----------------------------------------------------
--
-- self modifying code
--
-- 00: loadi 22      A = 22 22
-- 02: addi 22       A = 44 00
-- 04: testnz        A = 44 00
-- 05: jumpz 30      should not jump; jump to 30
-- 07: loadi B0      A = B0
-- 09: store 02      A = B0, instruction at 02, change to subi
-- 0B: jump 00       A = B0, jump to 00
-- 30: loadi AA      A = AA
-- 32: halt
--
--  00: 10 22 A0 22 70 90 30 10 B0 30 02 80 00;
--  30: 10 AA F0;
--
  end; 